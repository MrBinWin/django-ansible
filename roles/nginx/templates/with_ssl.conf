server {
	listen 80;
    server_name www.{{ server_hostname }};
	return 301 https://{{ server_hostname }}$request_uri;
}

server {
	listen 443 ssl;
    server_name www.{{ server_hostname }};
	return 301 https://{{ server_hostname }}$request_uri;

	ssl on;
	ssl_certificate /etc/letsencrypt/live/www.{{ server_hostname }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/www.{{ server_hostname }}/privkey.pem;
}

server{
	listen 80;
	server_name {{ server_hostname }} *.{{ server_hostname }};

	return 301 https://$host$request_uri;
	access_log /var/log/nginx/{{ project_name }}.access.log;
	error_log /var/log/nginx/{{ project_name }}.error.log;
}

server{
	listen 443 ssl;
	server_name {{ server_hostname }} *.{{ server_hostname }};

	root /www/{{ project_name }};

	ssl on;
	ssl_certificate /etc/letsencrypt/live/{{ server_hostname }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ server_hostname }}/privkey.pem;

	access_log /var/log/nginx/{{ project_name }}.access.log;
	error_log /var/log/nginx/{{ project_name }}.error.log;

	client_max_body_size 512M;

    gzip on;
	gzip_static on;

    gzip_disable "MSIE [1-6]\.";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_vary on;

    gzip_types
        application/javascript
        application/json
        application/octet-stream
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-javascript
        application/xml
        font/opentype
        font/truetype
        text/css
        text/javascript
        text/js
        text/plain
        image/svg+xml
        text/x-component
        text/xml;

	location = /favicon.ico {
		access_log off;
		log_not_found off;
	}

	location /static/ {
        alias /www/{{ project_name }}/static/;
        access_log off;
        expires 30d;
    }

    location ~* ^/media/(.+)$ {
		root /www;
		access_log off;
		expires 7d;
		try_files /uploads/$1 /library/$1 =404;
    }

	location / {
		try_files /web/$uri @python_proxy;
	}

	location @python_proxy {
	    include proxy_params;
	    {% if auth_basic_enabled %}
		    auth_basic "Restricted Content";
            auth_basic_user_file /etc/nginx/.htpasswd;
		{% endif %}
		proxy_pass http://unix:/tmp/{{ project_name }}.sock;
	}

}